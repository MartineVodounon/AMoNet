% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Back_BoolSimul290119.R
\name{BackBoolSimul}
\alias{BackBoolSimul}
\title{Back simulation, corresponds to the diffusion of the gradients}
\usage{
BackBoolSimul(NETall = NETall, Logic = c("Sigmoid", "tanh"),
  Mode = c("LAYER", "ASYNC", "SYNC"), Y = Y, MinSteps = MinSteps,
  FixNodes = FixNodes, Parallelize = Parallelize, TotiState = NULL,
  gradClipping = F, LSTM = LSTM, alpha = 0, lambda = 0.1)
}
\arguments{
\item{NETall}{data frame. The network in format (similar to .sif with) columns "source", "interaction", "target", additionally storing the architecture (column "Layer"), the parameters and optionnaly Boolean logic.}

\item{Logic}{character. The update function used for the simulations. Choices are: "Sigmoid" (default), "Boolean","tanh" or "ReLU".}

\item{Mode}{character. The type of simulation to perform. Choice are "LAYER" (layer based, default), "ASYNC" (assynchronous update), "SYNC" (synchronous update)}

\item{Y}{numeric or matrix. labels}

\item{MinSteps}{numeric. Number of back-simulation steps. Default to 1.}

\item{FixNodes}{character. Freeze parameters of selected nodes.}

\item{Parallelize}{boolean. Under devellopment for back-simulation.}

\item{TotiState}{array. Results of the simulations with the \code{simulate()} function.}

\item{gradClipping}{nunmeric. Maximum values allowed for gradients otherwise clipped. Gradient scaling in dev.}

\item{LSTM}{boolean. Should a Long-Short Term Memory (LSTM) unit architecture be used?}

\item{alpha}{numeric. Regularization term. Set to 1 for L1N (Lasso) regularization, set to 2 for L2N (Ridge) regularization, between 1 and 2 with lambda 1 for L1N + L2N (Elastic Net) regularization (penalization parameter is alpha).}

\item{lambda}{numeric. the lambda value for Lasso, Ridge or Elastic Net regularization. Set to 0 corresponds to no regularization. When alpha between 1 and 2 (Elastic Net regularization), lambda should be set to 1 and penalization parameter is alpha.}
}
\value{
gradients of parameters
c(list(TotdZState=TotdZState,TotdWState=TotdWState,TotdbState=TotdbState),Cache)
}
\description{
\code{BackBoolSimul} is taking forward simulations to derivate loss, flip the net, and simulate the gradients
}
\details{
\code{MinSteps} is corresponding to generic argument \code{nsim} in S3 function \code{simulate()}.
}

{
    "collab_server" : "",
    "contents" : "---\ntitle: \"AMoNet overview\"\nauthor: \"Loic Verlingue\"\ndate: \"29 juillet 2019\"\noutput: rmarkdown::html_vignette\nvignette: >\n  %\\VignetteIndexEntry{AMoNet_overview}\n  %\\VignetteEngine{knitr::rmarkdown}\n  \\usepackage[utf8]{inputenc}\n---\n\n---\n```{r}\n#install.packages(\"AMoNet\", dependencies=T)\nlibrary(AMoNet)\nif(TRUE){\n    print(\"Loading packages\")\n    library(reshape2)\n    library(parallel)\n    library(stringr)\n    library(splines)\n    library(cgdsr)\n    library(survival)\n    library(magick)\n    library(matrixStats)\n    library(survivalROC)\n    library(pec)\n  }\n\nset.seed(1234)\n\n```\n\n\n# Data in AMoNet package\nAMoNet comes with \n\n  * Data to build the network\n\n    + OMNI is a directed protein protein interaction (PPI) database from omnypath [omnipath](http://omnipathdb.org/) pooled with [ACSN](https://acsn.curie.fr/ACSN2/ACSN2.html) and immune models (in house).\n    + GenesSelecImmuno are immuno related gene set\n    + GenesSelecHall are hallmarks related gene set [MSigDB hallmarks](http://software.broadinstitute.org/gsea/msigdb/)\n  \n  * Data to train AMoNet\n    + LoadCleanTCGA() function to load TCGA data\n\n  * Default hyper-parameters for simulations and training\n    + Default are the default hyper-parameters\n    + Boundaries are the limit of the hyper-parameter search\n\nThe user can set hyper-parameters either in the Default object or in the related functions arguments.\n\n```{r, import Default in global.env()}\n#data(\"Default\");data(\"Boundaries\")\nhead(Default)\nlength(Default)\n```\n\n\n# Network buiding\n## Initiate AMoNet from simple gene(s) query\n\n```{r, eval = FALSE}\nnet<-AMoNet() # and check in you console to enter the names of your genes\n```\n\nOr\n```{r}\nnet<-AMoNet(c(\"TP53\",\"EGFR\"))\n#print(names(net))\n```\n\n\n## Build AMoNet network from OMNI molecular interaction database\n```{r}\nnet<-build.AMoNet(net, InteractionBase = OMNI, nblayers = 2, MinConnect = 4, RestrictedBuilding = T, MeanWinit = 0.01, SdWinit = 0.01, Phenotypes = GenesSelecHall, MECA=names_MECA, RestrictedBase = T, Interval = 1, Optimizer = \"Adam\", KeepPhenotypes=T, no_cores = 1, NameProj = \"MyAMoNet\")\n```\n\n\n## Plot your network\n```{r}\nplot(net, network = T)\n```\n\n## Simulate with sigmoid update\n```{r}\nnet<-simulate(net, nsim = 10, Logic = \"Sigmoid\", Parallel = F)\n```\n\n## Plot simulation results\n```{r}\nplot(net,Npat=2)\n#summary(net,perPatient = F,Species = NULL)\n\n```\n\n\n# Alterations of the network\nA simple example with 2 patients,  1 single output and artificial mutation data.\n```{r}\n# prepare mutations data\nSpecies<-union(net$NETall$source_hgnc,net$NETall$target_hgnc)\nMUT<-matrix(NA,nrow = 2,ncol = length(Species))\ncolnames(MUT)<-Species\nrownames(MUT)<-c(\"Pat1\",\"Pat2\")#,\"Pat3\")\n\n# mutate it\n# to ways: either descrete (\"non NA\") or numeric. Numeric is prefered.\nif(FALSE){\n  MUT[2,\"TP53\"]<-\"mut\"\n  MUT[2,\"EGFR\"]<-\"mut\"\n} else{ # or\n  MUT[2,\"TP53\"]<-(-1)\n  MUT[2,\"EGFR\"]<-1\n}\n\nprint(MUT[,1:10])\n```\n\n## Simulation\nSimulate and plot simulation for a selected sample (Npat=2)\n```{r}\nnet<-simulate(net, nsim = 10, Logic = \"Sigmoid\", Mode = \"LAYER\", MUT=MUT, ValMut = 100, Parallel = F)\n\nplot(net, Npat = 2, ylim=c(0,1))\n```\n\nPlot selected species in the network simulation for more that one samples (Npat=1:2)\n```{r}\nplot(net, Npat = 1:2, PDF = F, ylim=c(0,1), Species = \"Output\", col=c(2,3))\n```\n\n\n# Optimisation\n## Generate outputs\n```{r}\nClin<-matrix(c(0.9,0.2),nrow = 1)\ncolnames(Clin)<-c(\"Pat1\",\"Pat2\")\nrownames(Clin)<-\"Output\"\nprint(Clin)\n```\n\n\n## Run optimisation\n```{r}\nnet<-train.AMoNet(net,y=Clin,MUT=MUT,ValMut = 100,iteration=10, learning_rate=0.04, PDF=F, GIF=F, Visualize=NULL, Parallelize=F, alpha=0, Optimizer=NULL)\n```\n\n# Visualization and interpretation of AMoNet\n## Visualize learning phase\n```{r}\nplot(net$history)\n\n#dim(net$TotAttractors)\n#print(net$history)\n#plot(net,LEGEND = F, PDF = F)\n```\n\n## Relation of phenotype weights to outputs\n```{r}\nNETall1<-net$history$NETallList[[length(net$history$NETallList)]]\npar(mar=c(5, 4, 4, 2) + 0.1)\n#par(mar=c(15, 4, 4, 2) + 0.1)\nbarplot(NETall1[NETall1$Output,\"Weights\"],names.arg =NETall1[NETall1$Output,1], las=2, cex.names = 0.5)\n\n```\n\n## Predictions\n```{r}\nnet<-predict(net,newMUT = MUT)\n\nplot(net,Npat = 2,PDF = F, ylim=c(0,1),LEGEND = F)\n\nplot(net,Npat = c(1,2),PDF = F,LEGEND = T, ylim=c(0,1), Species = \"Output\", col=c(2,3))\n```\n\n```{r}\nprint(\"end\")\n```\n\n\n",
    "created" : 1565938327485.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2050796454",
    "id" : "6D620E2",
    "lastKnownWriteTime" : 1566895468,
    "last_content_update" : 1566895469011,
    "path" : "C:/Users/L_VERLINGUE/Desktop/ModelK/Rpack/AMoNet/vignettes/Vignette.Rmd",
    "project_path" : "vignettes/Vignette.Rmd",
    "properties" : {
        "chunk_output_type" : "inline",
        "docOutlineSize" : "71.84750468474493",
        "docOutlineVisible" : "0"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}